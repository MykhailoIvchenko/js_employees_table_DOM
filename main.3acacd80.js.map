{"version":3,"sources":["scripts/main.js"],"names":["clickedColumn","clickedColumnName","currentClickedColumn","clickedRow","currentHighlitedRow","toggleClicks","tableBody","document","querySelector","tableArray","toNumber","numberAsString","resultString","slice","parseInt","split","join","sortByColumn","tableToSort","columnNumber","row","querySelectorAll","head","i","length","push","cells","innerHTML","sort","a","b","prev","next","localeCompare","append","addEventListener","e","target","closest","clickedHeaderCells","mainTable","classList","remove","add","pageBody","newForm","createElement","createInput","formForAddingTo","inpName","elemType","labelElem","inputElem","toUpperCase","setAttribute","createSelect","optionsArray","selName","selectElem","elem","newOption","createButton","buttonName","buttonType","buttonElem","offices","tempContent","ourForm","handleFormInformation","preventDefault","targetForm","data","FormData","userData","Object","fromEntries","entries","currentName","currentAge","currentPosition","currentSalary","name","createNotification","value","age","createNewEmployee","employeeData","insertAdjacentHTML","position","office","convertSalary","salary","receivedNumber","toString","result","count","resultLength","padStart","className","title","description","notificationBlock","notificationTitle","notificationDescription","setTimeout","createInputInsteadCell","targetCell","inputForReplace","currentRowCells","focus","code","blur","saveChanges","currentInput","currentColumn","valueToSave","parseFloat","salaryAmount"],"mappings":"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","file":"main.3acacd80.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n// sorting table implementation\n\nlet clickedColumn;\nlet clickedColumnName;\nlet currentClickedColumn;\nlet toggleClicks = false;\n\nconst tableBody = document.querySelector('tbody');\n\nconst tableArray = [];\n\nfunction toNumber(numberAsString) {\n  let resultString = numberAsString;\n\n  // regex could be used here but I don't have enough knowledge about it yet\n  if (numberAsString[0] === '$') {\n    resultString = numberAsString.slice(1);\n\n    if (typeof (parseInt(resultString.split(',').join('')))\n    === 'number') {\n      resultString = parseInt(resultString.split(',').join(''));\n    }\n  } else if (parseInt(resultString)) {\n    resultString = parseInt(numberAsString);\n  }\n\n  return resultString;\n}\n\nfunction sortByColumn(tableToSort, columnNumber) {\n  const row = tableBody.querySelectorAll('tr');\n  const head = document.querySelector('thead');\n\n  for (let i = 0; i < row.length; i++) {\n    tableArray.push(row[i]);\n  }\n\n  // switch case with column names could be used here\n  // but if any column name would be changed\n  // or if other column would be added it wouldn't work anymore\n\n  if (typeof (toNumber(tableArray[0].cells[columnNumber].innerHTML))\n  === 'number') {\n    if (toggleClicks) {\n      tableArray.sort((a, b) => toNumber(a.cells[columnNumber].innerHTML)\n      - toNumber(b.cells[columnNumber].innerHTML));\n    } else {\n      tableArray.sort((a, b) => toNumber(b.cells[columnNumber].innerHTML)\n      - toNumber(a.cells[columnNumber].innerHTML));\n    }\n  } else {\n    tableArray.sort(function(a, b) {\n      const prev = a.cells[columnNumber].innerHTML;\n      const next = b.cells[columnNumber].innerHTML;\n\n      if (toggleClicks) {\n        return prev.localeCompare(next);\n      } else {\n        return next.localeCompare(prev);\n      }\n    });\n  }\n\n  tableToSort.append(head);\n\n  for (let i = 0; i < tableArray.length; i++) {\n    tableBody.append(tableArray[i]);\n  }\n}\n\ndocument.addEventListener('click', e => {\n  if (!e.target.closest('thead')) {\n    return false;\n  }\n\n  clickedColumnName = e.target;\n\n  if (clickedColumnName === currentClickedColumn) {\n    toggleClicks = !toggleClicks;\n  } else {\n    toggleClicks = true;\n  }\n\n  const clickedHeaderCells = e.target.closest('tr').cells;\n\n  for (let i = 0; i < clickedHeaderCells.length; i++) {\n    if (clickedHeaderCells[i].innerHTML === e.target.innerHTML) {\n      clickedColumn = i;\n      break;\n    }\n  }\n\n  const initialTable = document.querySelector('table');\n\n  sortByColumn(initialTable, clickedColumn);\n\n  currentClickedColumn = clickedColumnName;\n});\n\n// highliting clicked row implementation\n\nlet clickedRow;\nlet currentHighlitedRow;\n\nconst mainTable = document.querySelector('table');\n\nmainTable.addEventListener('click', e => {\n  if (e.target.closest('th')) {\n    return;\n  }\n\n  clickedRow = e.target.closest('tr');\n  currentHighlitedRow = document.querySelector('.active');\n\n  if (currentHighlitedRow) {\n    currentHighlitedRow.classList.remove('active');\n  }\n\n  if (clickedRow) {\n    clickedRow.classList.add('active');\n  }\n});\n\n// form adding implementation\n// could be also implemented using insertAdjacentHTML\n\nconst pageBody = document.querySelector('body');\n\nconst newForm = document.createElement('form');\n\npageBody.append(newForm);\n\nnewForm.classList.add('new-employee-form');\n\nfunction createInput(formForAddingTo, inpName, elemType) {\n  const labelElem = document.createElement('label');\n  const inputElem = document.createElement('input');\n\n  formForAddingTo.append(labelElem);\n  labelElem.innerHTML = `${inpName[0].toUpperCase()}${inpName.slice(1)}:`;\n  labelElem.append(inputElem);\n  inputElem.setAttribute('name', inpName);\n  inputElem.setAttribute('type', elemType);\n  inputElem.setAttribute('data-qa', inpName);\n  inputElem.setAttribute('required', 'required');\n}\n\nfunction createSelect(formForAddingTo, optionsArray, selName) {\n  const labelElem = document.createElement('label');\n  const selectElem = document.createElement('select');\n\n  labelElem.innerHTML = `${selName[0].toUpperCase()}${selName.slice(1)}:`;\n  formForAddingTo.append(labelElem);\n  labelElem.append(selectElem);\n  selectElem.setAttribute('name', selName);\n  selectElem.setAttribute('data-qa', selName);\n  selectElem.setAttribute('required', 'required');\n\n  for (const elem of optionsArray) {\n    const newOption = document.createElement('option');\n\n    newOption.innerHTML = elem;\n    selectElem.append(newOption);\n  }\n}\n\nfunction createButton(formForAddingTo, buttonName, buttonType) {\n  const buttonElem = document.createElement('button');\n\n  formForAddingTo.append(buttonElem);\n  buttonElem.innerHTML = buttonName;\n  buttonElem.setAttribute('required', 'required');\n  buttonElem.setAttribute('type', buttonType);\n}\n\nconst offices\n= ['Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco'];\n\ncreateInput(newForm, 'name', 'text');\ncreateInput(newForm, 'position', 'text');\ncreateSelect(newForm, offices, 'office');\ncreateInput(newForm, 'age', 'number');\ncreateInput(newForm, 'salary', 'number');\ncreateButton(newForm, 'Save to table', 'submit');\n\n// form data handling\n\nconst ourForm = document.querySelector('form');\n\nourForm.addEventListener('submit', handleFormInformation);\n\nfunction handleFormInformation(e) {\n  e.preventDefault();\n\n  const targetForm = e.target.closest('form');\n  const data = new FormData(targetForm);\n  const userData = Object.fromEntries(data.entries());\n\n  const currentName = document.querySelector('[name=\"name\"]');\n  const currentAge = document.querySelector('[name=\"age\"]');\n  const currentPosition = document.querySelector('[name=\"position\"]');\n  const currentSalary = document.querySelector('[name=\"salary\"]');\n\n  if (userData.name.length < 4) {\n    createNotification('error', 'Error!', `Name should contain more letters!`);\n\n    currentName.value = '';\n\n    return;\n  }\n\n  if (userData.age < 18) {\n    createNotification('error', 'Error!', 'Age cannot be less than 18!');\n\n    currentAge.value = null;\n\n    return;\n  }\n\n  if (userData.age > 90) {\n    createNotification('error', 'Error!', 'Age cannot be more than 90!');\n\n    currentAge.value = null;\n\n    return;\n  }\n\n  createNotification('success', 'Congrats!', 'New employee was added!');\n  createNewEmployee(userData);\n\n  // tried to do it using userData object but it didn't affect the form\n  currentName.value = '';\n  currentAge.value = '';\n  currentPosition.value = '';\n  currentSalary.value = '';\n}\n\nfunction createNewEmployee(employeeData) {\n  tableBody.insertAdjacentHTML('beforeend', `\n  <tr>\n    <td>${employeeData.name}</td>\n    <td>${employeeData.position}</td>\n    <td>${employeeData.office}</td>\n    <td>${employeeData.age}</td>\n    <td>${convertSalary(employeeData.salary)}</td>\n  </tr>\n  `);\n}\n\nfunction convertSalary(receivedNumber) {\n  let numberAsString = receivedNumber.toString();\n\n  while (numberAsString[0] === '0') {\n    numberAsString = numberAsString.slice(1);\n  }\n\n  let result = '';\n  let count = 1;\n  let resultLength = 1;\n\n  for (let i = numberAsString.length - 1; i >= 0; i--) {\n    if (count % 3 === 0 && i !== 0) {\n      resultLength++;\n      result = result.padStart(resultLength, `,${numberAsString[i]}`);\n    } else {\n      result = result.padStart(resultLength, `${numberAsString[i]}`);\n    }\n    count++;\n    resultLength++;\n  }\n\n  return '$' + result;\n}\n\nfunction createNotification(className, title, description) {\n  const notificationBlock = document.createElement('div');\n\n  notificationBlock.classList.add('notification', className);\n\n  notificationBlock.setAttribute('data-qa', 'notification');\n\n  const notificationTitle = document.createElement('h2');\n\n  notificationTitle.innerHTML = title;\n\n  const notificationDescription = document.createElement('p');\n\n  notificationDescription.innerHTML = description;\n\n  const pBody = document.querySelector('body');\n\n  pBody.append(notificationBlock);\n  notificationBlock.append(notificationTitle, notificationDescription);\n\n  setTimeout(() => {\n    notificationBlock.remove();\n  },\n  5000);\n}\n\n// double click action implementation\n// in the perfect implementation new values should be checked before changing\n\nlet tempContent;\n\ntableBody.addEventListener('dblclick', (e) => {\n  const cellClicked = e.target.closest('td');\n\n  createInputInsteadCell(cellClicked);\n});\n\nfunction createInputInsteadCell(targetCell) {\n  let inputForReplace;\n  let columnNumber;\n  const currentRowCells = targetCell.closest('tr').cells;\n\n  for (let i = 0; i < currentRowCells.length; i++) {\n    if (targetCell.innerHTML === currentRowCells[i].innerHTML) {\n      columnNumber = i + 1;\n      break;\n    }\n  }\n\n  if (columnNumber === 3) {\n    inputForReplace = document.createElement('select');\n\n    for (const elem of offices) {\n      const newOption = document.createElement('option');\n\n      newOption.innerHTML = elem;\n      inputForReplace.append(newOption);\n    }\n  } else {\n    inputForReplace = document.createElement('input');\n  }\n\n  inputForReplace.classList.add('cell-input');\n\n  tempContent = targetCell.innerHTML;\n  targetCell.innerHTML = '';\n  targetCell.append(inputForReplace);\n\n  inputForReplace.focus();\n\n  inputForReplace.addEventListener('keydown', e => {\n    if (e.code === 'Enter') {\n      e.target.blur();\n    }\n  });\n\n  inputForReplace.addEventListener('blur', e => {\n    saveChanges(e.target, columnNumber);\n  });\n}\n\nfunction saveChanges(currentInput, currentColumn) {\n  let valueToSave;\n\n  if (currentInput.value) {\n    switch (currentColumn) {\n      case 1:\n        if (parseFloat(currentInput.value)) {\n          createNotification('error', 'Error',\n            'Wrong input: number instead text');\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        }\n\n        if (currentInput.value.length < 4) {\n          createNotification('error', 'Error!',\n            `Name should contain more letters!`);\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        } else {\n          valueToSave = currentInput.value[0].toUpperCase()\n            + currentInput.value.slice(1);\n        }\n        break;\n\n      case 2:\n        if (parseFloat(currentInput.value)) {\n          createNotification('error', 'Error',\n            'Wrong input: number instead text');\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        } else {\n          valueToSave = currentInput.value[0].toUpperCase()\n            + currentInput.value.slice(1);\n        }\n        break;\n\n        // this case could be used if we don't use select,\n        // but standard text input\n\n        /* case 3:\n        let count = 0;\n\n        switch (currentInput.value) {\n          case 'Tokyo':\n          case 'Singapore':\n          case 'London':\n          case 'New York':\n          case 'Edinburgh':\n          case 'San Francisco':\n            count++;\n        }\n\n        if (count === 0) {\n          createNotification('error', 'Error',\n            'You should write existent office');\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        } else {\n          valueToSave = currentInput.value;\n        }\n        break; */\n      case 3:\n        valueToSave = currentInput.value;\n        break;\n\n      case 4:\n        const age = toNumber(currentInput.value);\n\n        if (typeof (age) !== 'number') {\n          createNotification('error', 'Error!', 'You should write a number');\n\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        }\n\n        if (age < 18) {\n          createNotification('error', 'Error!', 'Age cannot be less than 18!');\n\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        }\n\n        if (age > 90) {\n          createNotification('error', 'Error!', 'Age cannot be more than 90!');\n\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        } else {\n          valueToSave = age;\n        }\n        break;\n\n      case 5:\n        const salaryAmount = toNumber(currentInput.value);\n\n        if (typeof (salaryAmount) !== 'number') {\n          createNotification('error', 'Error!', 'You should write a number');\n\n          currentInput.value = '';\n          currentInput.focus();\n\n          return;\n        } else {\n          valueToSave = convertSalary(salaryAmount);\n        }\n        break;\n    }\n\n    currentInput.closest('td').innerHTML = valueToSave;\n    currentInput.remove();\n  } else {\n    currentInput.closest('td').innerHTML = tempContent;\n    currentInput.remove();\n  }\n};\n"]}